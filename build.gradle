/*
 * Copyright (c) 2008-2013 Ivan Khalopik.
 * All rights reserved.
 */

apply plugin: 'base'
apply plugin: 'release'
apply from: 'gradle/ide-settings.gradle'

group = 'com.mutabra'
version = '1.0-pre-alpha-15'
description = 'Mutabra CCG'

ext {
    isSnapshot = version.endsWith('-SNAPSHOT')

    versions = [
            // lang
            java: '1.7',
            groovy: '1.8.9',
            gradle: '1.8',
            less: '1.3.3',

            // common
            slf4j: '1.7.5',
            logback: '1.0.13',

            // test
            spock: '0.7-groovy-1.8',

            // domain
            mongo: '2.11.3',
            morphia: '0.105',

            // ui
            shiro: '1.2.2',
            tapestry: '5.3.7',
            scribe: '1.3.5',
            // provided
            servletApi: '2.5',
            mailApi: '1.4.7',
            jetty: '9.1.0.M0'
    ]
}

dependencies {
    archives project(path: ':ui', configuration: 'archives')
    archives("org.eclipse.jetty:jetty-runner:${versions.jetty}") {
        transitive false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = versions.gradle
}

task stage(type: Sync) {
    from configurations.archives
    into "${buildDir}/stage"
    rename 'jetty-runner(.*)\\.jar', 'jetty-runner.jar'
}

task herokuRelease << {
    scm.exec('checkout', '--orphan', 'heroku-release')
    scm.exec('commit', '-a', '-m', '[RELEASE]')
    scm.exec('push', 'heroku', '+HEAD:refs/heads/master')
    scm.exec('checkout', 'master')
    scm.exec('branch', '-D', 'heroku-release')
}

release {
    releaseTasks 'herokuRelease'
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "http://morphia.googlecode.com/svn/mavenrepo/" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = rootProject.group
    version = rootProject.version
    archivesBaseName = "${rootProject.name}-${name}"

    sourceCompatibility = versions.java
    targetCompatibility = versions.java

    dependencies {
        testCompile "org.slf4j:slf4j-api:${versions.slf4j}"
        testCompile "org.codehaus.groovy:groovy-all:${versions.groovy}"
        testCompile "org.spockframework:spock-core:${versions.spock}"

        testRuntime "org.slf4j:slf4j-simple:${versions.slf4j}"
    }

    test {
        useJUnit()

        maxHeapSize '512m'
    }
}
