/*
 * Copyright (c) 2008-2013 Ivan Khalopik.
 * All rights reserved.
 */

apply plugin: 'base'

group = 'com.mutabra'
version = '1.0-pre-alpha-13-SNAPSHOT'
description = 'Mutabra CCG'

ext {
    isSnapshot = version.endsWith('-SNAPSHOT')

    versions = [
            java: '1.6',
            groovy: '2.0.6',
            less: '1.3.3',
            gradle: '1.8',
            jetty: '8.1.4.v20120524',

            // common
            slf4j: '1.6.4',
            logback: '1.0.0',
            spock: '0.7-groovy-2.0',

            // domain
            mongo: '2.10.1',
            morphia: '0.105',

            // ui
            shiro: '1.2.0',
            tapestry: '5.3.7',
            scribe: '1.3.2',
            // provided
            servletApi: '2.5',
            mailApi: '1.4.4'
    ]
}

dependencies {
    archives project(path: ':ui', configuration: 'archives')
    archives("org.mortbay.jetty:jetty-runner:${versions.jetty}") {
        transitive false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = versions.gradle
}

task stage(type: Sync) {
    from configurations.archives
    into "${buildDir}/stage"
    rename 'jetty-runner(.*)\\.jar', 'jetty-runner.jar'
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.lesscss:lesscss:1.3.3"
    }
}

allprojects {
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        mavenLocal()

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "http://morphia.googlecode.com/svn/mavenrepo/" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = rootProject.group
    version = rootProject.version
    archivesBaseName = "${rootProject.name}-${name}"

    sourceCompatibility = versions.java
    targetCompatibility = versions.java

    configurations {
        provided
    }

    sourceSets {
        main {
            compileClasspath += configurations.provided
        }
        test {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
    }

    dependencies {
        testCompile "org.slf4j:slf4j-api:${versions.slf4j}"
        testCompile "org.codehaus.groovy:groovy-all:${versions.groovy}"
        testCompile "org.spockframework:spock-core:${versions.spock}"

        testRuntime "org.slf4j:slf4j-simple:${versions.slf4j}"
    }

    test {
        useJUnit()

        maxHeapSize '512m'
    }
}

apply from: 'gradle/ide-settings.gradle'
